openapi: 3.0.0
info:
  title: Data Summary API
  version: '1.0'
  description: |-
    The Tidepool API is an HTTP REST API used by Tidepool clients use to communicate with the Tidepool Platform.

    For more information, see the [Getting Started](../docs/quick-start.md) section.
  contact:
    name: Tidepool
    url: 'https://www.tidepool.org'
    email: support@tidepool.org
  termsOfService: 'https://developer.tidepool.org/terms-of-use/'
  license:
    name: BSD 2-Clause "Simplified" License
    url: 'https://github.com/tidepool-org/summary/blob/master/LICENSE'
  x-tidepool-service: 'https://github.com/tidepool-org/summary'
servers:
  - url: 'https://external.integration.tidepool.org'
    description: integration
  - url: 'https://api.tidepool.org'
    description: production
  - url: 'https://dev1.dev.tidepool.org'
    description: dev1
  - url: 'https://qa1.development.tidepool.org'
    description: qa1
  - url: 'https://qa2.development.tidepool.org'
    description: qa2
security:
  - sessionToken: []
tags:
  - name: Internal
    description: APIs intended for internal use by Tidepool.
  - name: Summary
    description: |-
      Summary Data

      This API is for a component within the `data` service that calculates summary statistics for user accounts.
      These routes are mostly executed by the `task` and `clinic-worker` services.
paths:
  '/v1/summaries/{userId}/{summaryType}':
    parameters:
      - $ref: '#/components/parameters/userId'
      - $ref: '#/components/parameters/summaryType'
    get:
      summary: Get User Summary
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Summary'
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
      operationId: GetSummary
      description: Retrieve a summary by user id
      x-internal: true
      tags:
        - Summary
        - Internal
components:
  schemas:
    TidepoolUserId:
      type: string
      title: Tidepool User ID
      pattern: '^([0-9a-f]{10}|[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})$'
      description: 'String representation of a Tidepool User ID. Old style IDs are 10-digit strings consisting of only hexadeximcal digits. New style IDs are 36-digit [UUID v4](https://en.wikipedia.org/wiki/Universally_unique_identifier#Version_4_(random))'
      readOnly: true
      x-go-type: string
    SummaryType:
      type: string
      title: Summary Type
      enum:
        - cgm
        - bgm
      description: Field which contains a summary type string.
      x-go-type: string
    AverageGlucose:
      title: Blood Glucose (mmol/L)
      description: 'Blood glucose value, in `mmol/L`'
      type: object
      properties:
        units:
          title: Blood Unit (mmol/L)
          type: string
          enum:
            - mmol/L
            - mmol/l
          example: mmol/L
          x-tags:
            - Data
        value:
          title: Blood Value (mmol/L)
          description: A floating point value representing a `mmol/L` value.
          type: number
          format: float
          minimum: 0
          maximum: 55
          example: 5.5
          x-tags:
            - Data
      required:
        - units
        - value
      x-tags:
        - Data
    BGMBucketData:
      type: object
      title: bgmbucketdata.v1
      description: Series of counters which represent one hour of a users data
      properties:
        date:
          type: string
          format: date-time
        lastRecordTime:
          type: string
          format: date-time
        timeInTargetRecords:
          description: Counter of records in target glucose range
          type: number
          example: 10
          x-go-type: int
        timeInHighRecords:
          description: Counter of records in high glucose range
          type: number
          example: 10
          x-go-type: int
        timeInVeryHighRecords:
          description: Counter of records in very high glucose range
          type: number
          example: 10
          x-go-type: int
        timeInLowRecords:
          description: Counter of records in low glucose range
          type: number
          example: 10
          x-go-type: int
        timeInVeryLowRecords:
          description: Counter of records in very low glucose range
          type: number
          example: 10
          x-go-type: int
        totalGlucose:
          type: number
          x-go-type: float64
          description: Total value of all glucose records
          example: 1234.56
    BGMPeriod:
      type: object
      title: bgmperiod.v1
      description: 'Summary of a specific BGM time period (currently: 1d, 7d, 14d, 30d)'
      properties:
        hasAverageGlucose:
          type: boolean
        averageGlucose:
          $ref: '#/components/schemas/AverageGlucose'
        hasTimeInTargetPercent:
          type: boolean
        timeInTargetPercent:
          description: Percentage of time spent in target glucose range
          type: number
          example: 0.35
          x-go-type: float64
        hasTimeInTargetRecords:
          type: boolean
        timeInTargetRecords:
          description: Counter of records in target glucose range
          type: number
          example: 10
          x-go-type: int
        hasTimeInHighPercent:
          type: boolean
        timeInHighPercent:
          description: Percentage of time spent in high glucose range
          type: number
          example: 0.35
          x-go-type: float64
        hasTimeInHighRecords:
          type: boolean
        timeInHighRecords:
          description: Counter of records in high glucose range
          type: number
          example: 10
          x-go-type: int
        hasTimeInVeryHighPercent:
          type: boolean
        timeInVeryHighPercent:
          description: Percentage of time spent in very high glucose range
          type: number
          example: 0.35
          x-go-type: float64
        hasTimeInVeryHighRecords:
          type: boolean
        timeInVeryHighRecords:
          description: Counter of records in very high glucose range
          type: number
          example: 10
          x-go-type: int
        hasTimeInLowPercent:
          type: boolean
        timeInLowPercent:
          description: Percentage of time spent in low glucose range
          type: number
          example: 0.35
          x-go-type: float64
        hasTimeInLowRecords:
          type: boolean
        timeInLowRecords:
          description: Counter of records in low glucose range
          type: number
          example: 10
          x-go-type: int
        hasTimeInVeryLowPercent:
          type: boolean
        timeInVeryLowPercent:
          description: Percentage of time spent in very low glucose range
          type: number
          example: 0.35
          x-go-type: float64
        hasTimeInVeryLowRecords:
          type: boolean
        timeInVeryLowRecords:
          description: Counter of records in very low glucose range
          type: number
          example: 10
          x-go-type: int
        hasTotalRecords:
          type: boolean
        totalRecords:
          description: Counter of records
          type: number
          example: 10
          x-go-type: int
        hasAverageDailyRecords:
          type: boolean
        averageDailyRecords:
          description: Average daily readings
          type: number
          example: 3.5
          x-go-type: float64
    BGMPeriods:
      type: object
      title: bgmperiods.v1
      description: A map to each supported BGM summary period
      properties:
        1d:
          $ref: '#/components/schemas/BGMPeriod'
        7d:
          $ref: '#/components/schemas/BGMPeriod'
        14d:
          $ref: '#/components/schemas/BGMPeriod'
        30d:
          $ref: '#/components/schemas/BGMPeriod'
    BGMStats:
      type: object
      title: bgmstats.v1
      description: A summary of a users recent BGM glucose values
      properties:
        totalHours:
          description: Total hours represented in the hourly stats
          type: number
          x-go-type: int
        periods:
          $ref: '#/components/schemas/BGMPeriods'
        buckets:
          type: array
          description: Rotating list containing the stats for each currently tracked hour in order
          items:
            $ref: '#/components/schemas/Bucket'
    CGMBucketData:
      type: object
      title: cgmbucketdata.v1
      description: Series of counters which represent one hour of a users data
      properties:
        timeInTargetMinutes:
          description: Counter of minutes spent in target glucose range
          type: number
          example: 200
          x-go-type: int
        timeInTargetRecords:
          description: Counter of records in target glucose range
          type: number
          example: 10
          x-go-type: int
        timeInHighMinutes:
          description: Counter of minutes spent in high glucose range
          type: number
          example: 200
          x-go-type: int
        timeInHighRecords:
          description: Counter of records in high glucose range
          type: number
          example: 10
          x-go-type: int
        timeInVeryHighMinutes:
          description: Counter of minutes spent in very high glucose range
          type: number
          example: 200
          x-go-type: int
        timeInVeryHighRecords:
          description: Counter of records in very high glucose range
          type: number
          example: 10
          x-go-type: int
        timeInLowMinutes:
          description: Counter of minutes spent in low glucose range
          type: number
          example: 200
          x-go-type: int
        timeInLowRecords:
          description: Counter of records in low glucose range
          type: number
          example: 10
          x-go-type: int
        timeInVeryLowMinutes:
          description: Counter of minutes spent in very low glucose range
          type: number
          example: 200
          x-go-type: int
        timeInVeryLowRecords:
          description: Counter of records in very low glucose range
          type: number
          example: 10
          x-go-type: int
        totalGlucose:
          type: number
          x-go-type: float64
          description: Total value of all glucose records
          example: 1234.56
        timeCGMUseMinutes:
          description: Counter of minutes using a cgm
          type: number
          example: 200
          x-go-type: int
        timeCGMUseRecords:
          description: Counter of records wearing a cgm
          type: number
          example: 10
          x-go-type: int
    CGMPeriod:
      type: object
      title: cgmperiod.v1
      description: 'Summary of a specific CGM time period (currently: 1d, 7d, 14d, 30d)'
      properties:
        hasAverageGlucose:
          type: boolean
        averageGlucose:
          $ref: '#/components/schemas/AverageGlucose'
        hasGlucoseManagementIndicator:
          type: boolean
        glucoseManagementIndicator:
          type: number
          x-go-type: float64
          description: A derived value which emulates A1C
          example: 7.5
        hasTimeInTargetPercent:
          type: boolean
        timeInTargetPercent:
          description: Percentage of time spent in target glucose range
          type: number
          example: 0.35
          x-go-type: float64
        hasTimeInTargetMinutes:
          type: boolean
        timeInTargetMinutes:
          description: Counter of minutes spent in target glucose range
          type: number
          example: 200
          x-go-type: int
        hasTimeInTargetRecords:
          type: boolean
        timeInTargetRecords:
          description: Counter of records in target glucose range
          type: number
          example: 10
          x-go-type: int
        hasTimeInHighPercent:
          type: boolean
        timeInHighPercent:
          description: Percentage of time spent in high glucose range
          type: number
          example: 0.35
          x-go-type: float64
        hasTimeInHighMinutes:
          type: boolean
        timeInHighMinutes:
          description: Counter of minutes spent in high glucose range
          type: number
          example: 200
          x-go-type: int
        hasTimeInHighRecords:
          type: boolean
        timeInHighRecords:
          description: Counter of records in high glucose range
          type: number
          example: 10
          x-go-type: int
        hasTimeInVeryHighPercent:
          type: boolean
        timeInVeryHighPercent:
          description: Percentage of time spent in very high glucose range
          type: number
          example: 0.35
          x-go-type: float64
        hasTimeInVeryHighMinutes:
          type: boolean
        timeInVeryHighMinutes:
          description: Counter of minutes spent in very high glucose range
          type: number
          example: 200
          x-go-type: int
        hasTimeInVeryHighRecords:
          type: boolean
        timeInVeryHighRecords:
          description: Counter of records in very high glucose range
          type: number
          example: 10
          x-go-type: int
        hasTimeInLowPercent:
          type: boolean
        timeInLowPercent:
          description: Percentage of time spent in low glucose range
          type: number
          example: 0.35
          x-go-type: float64
        hasTimeInLowMinutes:
          type: boolean
        timeInLowMinutes:
          description: Counter of minutes spent in low glucose range
          type: number
          example: 200
          x-go-type: int
        hasTimeInLowRecords:
          type: boolean
        timeInLowRecords:
          description: Counter of records in low glucose range
          type: number
          example: 10
          x-go-type: int
        hasTimeInVeryLowPercent:
          type: boolean
        timeInVeryLowPercent:
          description: Percentage of time spent in very low glucose range
          type: number
          example: 0.35
          x-go-type: float64
        hasTimeInVeryLowMinutes:
          type: boolean
        timeInVeryLowMinutes:
          description: Counter of minutes spent in very low glucose range
          type: number
          example: 200
          x-go-type: int
        hasTimeInVeryLowRecords:
          type: boolean
        timeInVeryLowRecords:
          description: Counter of records in very low glucose range
          type: number
          example: 10
          x-go-type: int
        hasTimeCGMUsePercent:
          type: boolean
        timeCGMUsePercent:
          description: Percentage of time spent wearing a cgm
          type: number
          example: 0.35
          x-go-type: float64
        hasTimeCGMUseMinutes:
          type: boolean
        timeCGMUseMinutes:
          description: Counter of minutes spent wearing a cgm
          type: number
          example: 200
          x-go-type: int
        hasTimeCGMUseRecords:
          type: boolean
        timeCGMUseRecords:
          description: Counter of minutes spent wearing a cgm
          type: number
          example: 10
          x-go-type: int
        hasTotalRecords:
          type: boolean
        totalRecords:
          description: Counter of records
          type: number
          example: 10
          x-go-type: int
        hasAverageDailyRecords:
          type: boolean
        averageDailyRecords:
          description: Average daily readings
          type: number
          example: 3.5
          x-go-type: float64
    CGMPeriods:
      type: object
      title: cgmperiods.v1
      description: A map to each supported CGM summary period
      properties:
        1d:
          $ref: '#/components/schemas/CGMPeriod'
        7d:
          $ref: '#/components/schemas/CGMPeriod'
        14d:
          $ref: '#/components/schemas/CGMPeriod'
        30d:
          $ref: '#/components/schemas/CGMPeriod'
    CGMStats:
      type: object
      title: cgmstats.v1
      description: A summary of a users recent CGM glucose values
      properties:
        totalHours:
          description: Total hours represented in the hourly stats
          type: number
          x-go-type: int
        periods:
          $ref: '#/components/schemas/CGMPeriods'
        buckets:
          type: array
          description: Rotating list containing the stats for each currently tracked hour in order
          items:
            $ref: '#/components/schemas/Bucket'
    Bucket:
      type: object
      title: bucket.v1
      description: bucket containing an hour of bgm or cgm aggregations
      properties:
        date:
          type: string
          format: date-time
        lastRecordTime:
          type: string
          format: date-time
        data:
          oneOf:
            - $ref: '#/components/schemas/BGMBucketData'
            - $ref: '#/components/schemas/CGMBucketData'
    Config:
      type: object
      title: config.v1
      description: Summary schema version and calculation configuration
      properties:
        schemaVersion:
          description: Summary schema version
          type: number
          x-go-type: int
        highGlucoseThreshold:
          description: Threshold used for determining if a value is high
          type: number
          x-go-type: float64
        veryHighGlucoseThreshold:
          description: Threshold used for determining if a value is very high
          type: number
          x-go-type: float64
        lowGlucoseThreshold:
          description: Threshold used for determining if a value is low
          type: number
          x-go-type: float64
        veryLowGlucoseThreshold:
          description: Threshold used for determining if a value is very low
          type: number
          x-go-type: float64
    Dates:
      type: object
      title: dates.v1
      description: dates tracked for summary calculation
      properties:
        lastUpdatedDate:
          description: Date of the last calculation
          type: string
          format: date-time
        firstData:
          description: Date of the first included value
          type: string
          format: date-time
        lastData:
          description: Date of the last calculated value
          type: string
          format: date-time
        lastUploadDate:
          description: Created date of the last calculated value
          type: string
          format: date-time
        hasLastUploadDate:
          type: boolean
        outdatedSince:
          description: 'Date of the first user upload after lastData, removed when calculated'
          type: string
          format: date-time
    Summary:
      type: object
      title: summary.v1
      description: A summary of a users recent data
      properties:
        type:
          $ref: '#/components/schemas/SummaryType'
        userId:
          $ref: '#/components/schemas/TidepoolUserId'
        config:
          $ref: '#/components/schemas/Config'
        dates:
          $ref: '#/components/schemas/Dates'
        stats:
          oneOf:
            - $ref: '#/components/schemas/CGMStats'
            - $ref: '#/components/schemas/BGMStats'
  securitySchemes:
    sessionToken:
      description: Tidepool Session Token
      type: apiKey
      name: X-Tidepool-Session-Token
      in: header
    serverToken:
      description: Tidepool Server Token
      type: apiKey
      name: X-Tidepool-Session-Token
      in: header
  parameters:
    userId:
      name: userId
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/TidepoolUserId'
    summaryType:
      name: summaryType
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/SummaryType'
